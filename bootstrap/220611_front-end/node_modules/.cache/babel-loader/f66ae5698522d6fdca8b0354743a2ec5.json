{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TutorialDataService from \"@/services/TutorialDataService\";\nexport default {\n  name: \"tutorials-list\",\n  data: function data() {\n    return {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n      //TODO: title -> searchTitle\n      searchTitle: \"\",\n      //  TODO: 아래 변수 4개 추가\n      page: 1,\n      count: 0,\n      //pageSize :페이지당 건수\n      pageSize: 3,\n      //페이지당 건수(3,6,9건수)\n      pageSizes: [3, 6, 9]\n    };\n  },\n  methods: {\n    //TODO: getRequestParams 추가 (springboot쪽으로 URL params 전송 )\n    // http://localhost:8000/api/tutorials?title=''&page=1&size=3\n    getRequestParams: function getRequestParams(searchTitle, page, pageSize) {\n      var params = {}; //searchTitle 값이 있으면 params객체에 title 로 저장\n\n      if (searchTitle) {\n        params[\"title\"] = searchTitle;\n      } //page 값이 있으면 params객체에 page 로 저장\n\n\n      if (page) {\n        params[\"page\"] = page - 1;\n      } //pageSize 값이 있으면 params객체에 size 로 저장\n\n\n      if (pageSize) {\n        params[\"size\"] = pageSize;\n      }\n\n      return params;\n    },\n    // TODO : 아래 메소드 수정\n    // TODO : getAll() => getAll(params)\n    retrieveTutorials: function retrieveTutorials() {\n      var _this = this;\n\n      var params = this.getRequestParams(this.searchTitle, this.page, this.pageSize); //TODO : 백엔드 쪽으로 전체 데이터 요청 (페이징 처리)\n\n      TutorialDataService.getAll(params).then(function (response) {\n        // TODO: 아래 수정\n        // 임시 변수 tutorials, totalItems (서버의 결과 데이터가 들어옴)\n        var _response$data = response.data,\n            tutorials = _response$data.tutorials,\n            totalItems = _response$data.totalItems;\n        _this.tutorials = tutorials; // 객체\n\n        _this.count = totalItems; // 총건수\n\n        console.log(response.data);\n      })[\"catch\"](function (e) {\n        console.log(e);\n      });\n    },\n    // TODO: 메소드 2개 추가 handlePageChange , handlePageSizeChange\n    //역할: 현재페이지 번호에 해당하는 데이터 다시 조회\n    handlePageChange: function handlePageChange(value) {\n      //페이지번호 저장\n      this.page = value; //다시 조회\n\n      this.retrieveTutorials();\n    },\n    //역할: 페이지당 건수가 변경되면 다시 조회하는 메소드\n    handlePageSizeChange: function handlePageSizeChange(event) {\n      //select 박스 변경시 값 가져옴 (이벤트로 가져옴)\n      //한 페이지당 건수 저장\n      this.pageSize = event.target.value; //첫페이지 초기화?\n\n      this.page = 1; //다시 조회\n\n      this.retrieveTutorials();\n    },\n    refreshList: function refreshList() {\n      this.retrieveTutorials();\n      this.currentTutorial = null;\n      this.currentIndex = -1;\n    },\n    setActiveTutorial: function setActiveTutorial(tutorial, index) {\n      this.currentTutorial = tutorial;\n      this.currentIndex = index;\n    },\n    removeAllTutorials: function removeAllTutorials() {\n      var _this2 = this;\n\n      TutorialDataService.deleteAll().then(function (response) {\n        console.log(response.data);\n\n        _this2.refreshList();\n      })[\"catch\"](function (e) {\n        console.log(e);\n      });\n    } //\n    // searchTitle() {\n    //   TutorialDataService.findByTitle(this.title)\n    //     .then(response => {\n    //       this.tutorials = response.data;\n    //       console.log(response.data);\n    //     })\n    //     .catch(e => {\n    //       console.log(e);\n    //     });\n    // }\n\n  },\n  mounted: function mounted() {\n    this.retrieveTutorials();\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwFA;AAEA;EACAA,sBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,aADA;MAEAC,qBAFA;MAGAC,gBAHA;MAIA;MACAC,eALA;MAMA;MACAC,OAPA;MAQAC,QARA;MASA;MACAC,WAVA;MAWA;MACAC;IAZA;EAcA,CAjBA;EAkBAC;IACA;IACA;IACAC,gBAHA,4BAGAN,WAHA,EAGAC,IAHA,EAGAE,QAHA,EAGA;MACA,gBADA,CAEA;;MACA;QACAI;MACA,CALA,CAMA;;;MACA;QACAA;MACA,CATA,CAUA;;;MACA;QACAA;MACA;;MACA;IACA,CAlBA;IAmBA;IACA;IACAC,iBArBA,+BAqBA;MAAA;;MACA,mCACA,gBADA,EAEA,SAFA,EAGA,aAHA,EADA,CAMA;;MACAC,mCACAC,IADA,CACA;QACA;QACA;QACA;QAAA;QAAA;QACA,4BAJA,CAIA;;QACA,yBALA,CAKA;;QAEAC;MACA,CATA,WAUA;QACAA;MACA,CAZA;IAaA,CAzCA;IA2CA;IACA;IACAC,gBA7CA,4BA6CAC,KA7CA,EA6CA;MACA;MACA,kBAFA,CAGA;;MACA;IACA,CAlDA;IAmDA;IACAC,oBApDA,gCAoDAC,KApDA,EAoDA;MACA;MACA;MACA,mCAHA,CAIA;;MACA,cALA,CAMA;;MACA;IACA,CA5DA;IA6DAC,WA7DA,yBA6DA;MACA;MACA;MACA;IACA,CAjEA;IAmEAC,iBAnEA,6BAmEAC,QAnEA,EAmEAC,KAnEA,EAmEA;MACA;MACA;IACA,CAtEA;IAwEAC,kBAxEA,gCAwEA;MAAA;;MACAX,gCACAC,IADA,CACA;QACAC;;QACA;MACA,CAJA,WAKA;QACAA;MACA,CAPA;IAQA,CAjFA,CAkFA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;EA5FA,CAlBA;EAgHAU,OAhHA,qBAgHA;IACA;EACA;AAlHA","names":["name","data","tutorials","currentTutorial","currentIndex","searchTitle","page","count","pageSize","pageSizes","methods","getRequestParams","params","retrieveTutorials","TutorialDataService","then","console","handlePageChange","value","handlePageSizeChange","event","refreshList","setActiveTutorial","tutorial","index","removeAllTutorials","mounted"],"sourceRoot":"src/components/tutorials","sources":["TutorialsList.vue"],"sourcesContent":["<template>\n  <div class=\"list row\">\n    <div class=\"col-md-8\">\n      <div class=\"input-group mb-3\">\n<!--        TODO : 수정 시작 #1-->\n        <input type=\"text\" class=\"form-control\" placeholder=\"Search by title\"\n          v-model=\"searchTitle\"/>\n        <div class=\"input-group-append\">\n          <button\n              class=\"btn btn-outline-secondary\"\n              type=\"button\"\n              @click=\"page=1; retrieveTutorials();\"\n          >\n            Search\n          </button>\n        </div>\n      </div>\n    </div>\n\n<!--    TODO: 태그 추가 -->\n    <div class=\"col-md-12\">\n      <div class=\"mb-3\">\n        Items per Page :\n        <select v-model=\"pageSize\"\n                @change=\"handlePageSizeChange($event)\">\n          <option v-for=\"size in pageSize\"\n                  :key=\"size\"\n                  :value=\"size\"\n                  >\n            {{size}}\n          </option>\n        </select>\n      </div>\n\n<!--      TODO: page bar 추가-->\n      <b-pagination\n          v-model=\"page\"\n          :total-rows=\"count\"\n          :per-page=\"pageSize\"\n          prev-text=\"Prev\"\n          next-text=\"Next\"\n          @change=\"handlePageChange\"\n          >\n\n      </b-pagination>\n    </div>\n<!--    TODO: page bar 끝-->\n    <div class=\"col-md-6\">\n      <h4>Tutorials List</h4>\n      <ul class=\"list-group\">\n        <li class=\"list-group-item\"\n          :class=\"{ active: index == currentIndex }\"\n          v-for=\"(tutorial, index) in tutorials\"\n          :key=\"index\"\n          @click=\"setActiveTutorial(tutorial, index)\"\n        >\n          {{ tutorial.title }}\n        </li>\n      </ul>\n\n      <button class=\"m-3 btn btn-sm btn-danger\" @click=\"removeAllTutorials\">\n        Remove All\n      </button>\n    </div>\n    <div class=\"col-md-6\">\n      <div v-if=\"currentTutorial\">\n        <h4>Tutorial</h4>\n        <div>\n          <label><strong>Title:</strong></label> {{ currentTutorial.title }}\n        </div>\n        <div>\n          <label><strong>Description:</strong></label> {{ currentTutorial.description }}\n        </div>\n        <div>\n          <label><strong>Status:</strong></label> {{ (currentTutorial.published==\"Y\") ? \"Published\" : \"Pending\" }}\n        </div>\n\n        <router-link :to=\"'/tutorials/' + currentTutorial.id\" class=\"badge badge-primary\">Edit</router-link>\n      </div>\n      <div v-else>\n        <br />\n        <p>Please click on a Tutorial...</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TutorialDataService from \"@/services/TutorialDataService\";\n\nexport default {\n  name: \"tutorials-list\",\n  data() {\n    return {\n      tutorials: [],\n      currentTutorial: null,\n      currentIndex: -1,\n      //TODO: title -> searchTitle\n      searchTitle: \"\",\n    //  TODO: 아래 변수 4개 추가\n      page:1,\n      count:0,\n      //pageSize :페이지당 건수\n      pageSize:3,\n      //페이지당 건수(3,6,9건수)\n      pageSizes:[3,6,9]\n    };\n  },\n  methods: {\n    //TODO: getRequestParams 추가 (springboot쪽으로 URL params 전송 )\n    // http://localhost:8000/api/tutorials?title=''&page=1&size=3\n    getRequestParams(searchTitle, page, pageSize){\n        let params = {};\n        //searchTitle 값이 있으면 params객체에 title 로 저장\n        if (searchTitle){\n          params[\"title\"]=searchTitle;\n        }\n        //page 값이 있으면 params객체에 page 로 저장\n        if (page){\n          params[\"page\"]=page-1;\n        }\n        //pageSize 값이 있으면 params객체에 size 로 저장\n        if (pageSize){\n          params[\"size\"]=pageSize;\n        }\n        return params;\n    },\n    // TODO : 아래 메소드 수정\n    // TODO : getAll() => getAll(params)\n    retrieveTutorials() {\n      const params = this.getRequestParams(\n          this.searchTitle,\n          this.page,\n          this.pageSize\n      );\n      //TODO : 백엔드 쪽으로 전체 데이터 요청 (페이징 처리)\n      TutorialDataService.getAll(params)\n        .then(response => {\n          // TODO: 아래 수정\n          // 임시 변수 tutorials, totalItems (서버의 결과 데이터가 들어옴)\n          const {tutorials, totalItems} = response.data;\n          this.tutorials = tutorials; // 객체\n          this.count = totalItems;// 총건수\n\n          console.log(response.data);\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n\n    // TODO: 메소드 2개 추가 handlePageChange , handlePageSizeChange\n    //역할: 현재페이지 번호에 해당하는 데이터 다시 조회\n    handlePageChange(value){\n      //페이지번호 저장\n      this.page = value;\n      //다시 조회\n      this.retrieveTutorials();\n    },\n    //역할: 페이지당 건수가 변경되면 다시 조회하는 메소드\n    handlePageSizeChange(event){\n      //select 박스 변경시 값 가져옴 (이벤트로 가져옴)\n      //한 페이지당 건수 저장\n      this.pageSize = event.target.value;\n      //첫페이지 초기화?\n      this.page=1;\n      //다시 조회\n      this.retrieveTutorials();\n    },\n    refreshList() {\n      this.retrieveTutorials();\n      this.currentTutorial = null;\n      this.currentIndex = -1;\n    },\n\n    setActiveTutorial(tutorial, index) {\n      this.currentTutorial = tutorial;\n      this.currentIndex = index;\n    },\n\n    removeAllTutorials() {\n      TutorialDataService.deleteAll()\n        .then(response => {\n          console.log(response.data);\n          this.refreshList();\n        })\n        .catch(e => {\n          console.log(e);\n        });\n    },\n    //\n    // searchTitle() {\n    //   TutorialDataService.findByTitle(this.title)\n    //     .then(response => {\n    //       this.tutorials = response.data;\n    //       console.log(response.data);\n    //     })\n    //     .catch(e => {\n    //       console.log(e);\n    //     });\n    // }\n  },\n  mounted() {\n    this.retrieveTutorials();\n  }\n};\n</script>\n\n<style>\n.list {\n  text-align: left;\n  max-width: 750px;\n  margin: auto;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}