{"ast":null,"code":"import \"core-js/modules/es.symbol.js\";\nimport \"core-js/modules/es.symbol.description.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 화면 : tutorial 데이터 추가하는 화면 \nimport TutorialDataService from \"../services/TutorialDataService\";\nexport default {\n  name: \"add-tutorial\",\n  data: function data() {\n    return {\n      // tutorial 객체 초기화\n      tutorial: {\n        id: null,\n        title: \"\",\n        description: \"\",\n        published: \"N\"\n      },\n      submitted: false\n    };\n  },\n  methods: {\n    saveTutorial: function saveTutorial() {\n      var _this = this;\n\n      // 전송용 데이터: springboot 로 \n      var data = {\n        // this 는 tutorial객체에서 가져오는 거 \n        title: this.tutorial.title,\n        description: this.tutorial.description\n      }; // springboot(api서버) 데이터 추가 요청 \n\n      TutorialDataService.create(data).then(function (response) {\n        // 백엔드에 요청이 성공하면 결과가 들어옴 \n        _this.tutorial.id = response.data.id;\n        _this.submitted = true;\n        console.log(response.data);\n      })[\"catch\"](function (e) {\n        // 실패하면 (프론트로)결과가 들어옴 \n        console.log(e);\n      });\n    },\n    newTutorial: function newTutorial() {\n      this.submitted = false;\n      this.tutorial = {};\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA;AACA;AACA;EACAA,oBADA;EAEAC,IAFA,kBAEA;IACA;MACA;MACAC;QACAC,QADA;QAEAC,SAFA;QAGAC,eAHA;QAIAC;MAJA,CAFA;MAQAC;IARA;EAUA,CAbA;EAcAC;IACAC,YADA,0BACA;MAAA;;MACA;MACA;QACA;QACAL,0BAFA;QAGAC;MAHA,EAFA,CAOA;;MACAK,iCACAC,IADA,CACA;QACA;QACA;QACA;QACAC;MACA,CANA,WAOA;QACA;QACAA;MACA,CAVA;IAWA,CApBA;IAqBAC,WArBA,yBAqBA;MACA;MACA;IACA;EAxBA;AAdA","names":["name","data","tutorial","id","title","description","published","submitted","methods","saveTutorial","TutorialDataService","then","console","newTutorial"],"sourceRoot":"src/components","sources":["AddTutorial.vue"],"sourcesContent":["<template>\n  <div class=\"submit-form\">\n      <div v-if=\"!submitted\">\n          <div class=\"form-group\">\n              <label for=\"title\">Title</label>\n              <input \n                type=\"text\" \n                class=\"form-control\" \n                id=\"title\" \n                required \n                v-model=\"tutorial.title\" \n                name=\"title\"\n                />\n          </div>\n\n          <div class=\"form-group\">\n              <label for=\"description\">Description</label>\n              <input \n                class=\"form-control\" \n                id=\"description\" \n                required \n                v-model=\"tutorial.description\" \n                name=\"description\"\n                />\n          </div>\n\n          <button @click=\"saveTutorial\" class=\"btn btn-success\">\n              Submit\n          </button>\n      </div>\n          \n      <div v-else>\n          <h4>You submitted successfully!</h4>\n          <button class=\"btn btn-success\" @click=\"newTutorial\">\n              Add\n          </button>\n      </div>\n  </div>\n</template>\n\n<script>\n// 화면 : tutorial 데이터 추가하는 화면 \nimport TutorialDataService from \"../services/TutorialDataService\"\nexport default {\n    name:\"add-tutorial\",\n    data(){\n        return {\n            // tutorial 객체 초기화\n            tutorial:{\n                id: null,\n                title: \"\",\n                description: \"\",\n                published: \"N\"\n            },\n            submitted: false\n        }\n    },\n    methods:{\n        saveTutorial(){\n            // 전송용 데이터: springboot 로 \n            var data = {\n                // this 는 tutorial객체에서 가져오는 거 \n                title: this.tutorial.title,\n                description: this.tutorial.description,\n            };\n            // springboot(api서버) 데이터 추가 요청 \n            TutorialDataService.create(data)\n            .then(response=>{\n                // 백엔드에 요청이 성공하면 결과가 들어옴 \n                this.tutorial.id = response.data.id;\n                this.submitted = true;\n                console.log(response.data);\n            })\n            .catch(e=>{\n                // 실패하면 (프론트로)결과가 들어옴 \n                console.log(e);\n            })\n        },\n        newTutorial(){\n            this.submitted = false;\n            this.tutorial = {};\n        },\n    }\n}\n</script>\n\n<style>\n    .submit-form{\n        max-width: 300px;\n        margin: auto;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}