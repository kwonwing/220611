{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport TutorialDataService from \"../../services/TutorialDataService\"; //eslint : vue 감시 \n//  eslint-disable : eslint 비활성화 (name 두단어여야하는데 한단어라서 에러남)\n//  아래 eslint 적용 예외 처리 \n\n/* eslint-disable*/\n\nexport default {\n  name: \"tutorial\",\n  data: function data() {\n    return {\n      currentTutorial: null,\n      message: ''\n    };\n  },\n  methods: {\n    // id로tutorial데이터 상세 조회\n    // 백엔드쪽에 요청 \n    getTutorial: function getTutorial(id) {\n      var _this = this;\n\n      // id로 검색을 백엔드에 요청하는 메소드\n      TutorialDataService.get(id) // 성공하면 then으로 들어옴\n      .then(function (response) {\n        // response.data : 백엔드쪽에서온 데이터 \n        _this.currentTutorial = response.data;\n        console.log(response.data);\n      }) // 실패하면 catch로 들어옴\n      [\"catch\"](function (e) {\n        console.log(e);\n      });\n    },\n    // tutorial 데이터 수정 메소드 호출\n    updateTutorial: function updateTutorial() {\n      var _this2 = this;\n\n      // 백엔드쪽에 id로 검색해서 데이터 수정 요청 \n      TutorialDataService.update(this.currentTutorial.id, this.currentTutorial) // 성공하면 then으로 들어옴\n      .then(function (response) {\n        console.log(response.data);\n        _this2.message = 'The tutorial was updated successfully!';\n      }) // 실패하면 catch로 들어옴 \n      [\"catch\"](function (e) {\n        console.log(e);\n      });\n    },\n    // 백엔드쪽에 데이터 삭제 요청 메소드\n    deleteTutorial: function deleteTutorial() {\n      var _this3 = this;\n\n      // 백엔드쪽에 id로 데이터 삭제 요청\n      TutorialDataService[\"delete\"](this.currentTutorial.id) // 성공하면 then 으로 응답 들어옴 \n      .then(function (response) {\n        console.log(response.data);\n      }) // 실패하면 catch 로 응답 들어옴 \n      [\"catch\"](function (e) {\n        console.log(e); // 실패 후 새로고침(tutorialList 첫화면으로 새로고침 )\n        // this.$router.push(이동할 페이지)\n\n        _this3.$router.push({\n          name: \"tutorials\"\n        });\n      });\n    },\n    // tutorial테이블 published 컬럼 : 'Y'<->'N'\n    // published컬럼을 수정하는 메소드 \n    updatePublished: function updatePublished(status) {//TODO\n    }\n  },\n  // vue 화면이 로딩될때(뜰때) 자동으로 실행되는 이벤트\n  mounted: function mounted() {\n    this.message = ''; // router/index.js =>path: 'tutorials/:id'\n\n    this.getTutorial(this.$route.params.id);\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA,qE,CACA;AACA;AACA;;AACA;;AACA;EACAA,gBADA;EAEAC,IAFA,kBAEA;IACA;MACAC,qBADA;MAEAC;IAFA;EAIA,CAPA;EAQAC;IACA;IACA;IACAC,WAHA,uBAGAC,EAHA,EAGA;MAAA;;MACA;MACAC,4BACA;MADA,CAEAC,IAFA,CAEA;QACA;QACA;QACAC;MACA,CANA,EAOA;MAPA,UAQA;QACAA;MACA,CAVA;IAWA,CAhBA;IAiBA;IACAC,cAlBA,4BAkBA;MAAA;;MACA;MACAH,0EACA;MADA,CAEAC,IAFA,CAEA;QACAC;QACA;MACA,CALA,EAMA;MANA,UAOA;QACAA;MACA,CATA;IAUA,CA9BA;IA+BA;IACAE,cAhCA,4BAgCA;MAAA;;MACA;MACAJ,uDACA;MADA,CAEAC,IAFA,CAEA;QACAC;MACA,CAJA,EAKA;MALA,UAMA;QACAA,eADA,CAEA;QACA;;QACA;UAAAT;QAAA;MACA,CAXA;IAYA,CA9CA;IA+CA;IACA;IACAY,eAjDA,2BAiDAC,MAjDA,EAiDA,CACA;IACA;EAnDA,CARA;EA6DA;EACAC,OA9DA,qBA8DA;IACA,kBADA,CAEA;;IACA;EACA;AAlEA","names":["name","data","currentTutorial","message","methods","getTutorial","id","TutorialDataService","then","console","updateTutorial","deleteTutorial","updatePublished","status","mounted"],"sourceRoot":"src/components/tutorials","sources":["Tutorial.vue"],"sourcesContent":["<template>\n  <!-- currentTutorial != null 이면 -->\n  <div v-if=\"currentTutorial\" class=\"edit-form\">\n    <h4>Tutorial</h4>\n    <!-- form 시작 -->\n    <form>\n        <div class=\"form-group\">\n            <label for=\"title\"></label>\n            <input type=\"text\" class=\"form-controll\" id=\"title\" v-model=\"currentTutorial.title\"/>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"description\"></label>\n            <input type=\"description\" class=\"form-controll\" id=\"description\" v-model=\"currentTutorial.description\"/>\n        </div>\n        <div class=\"form-group\">\n            <label><strong>Status: </strong></label>\n            {{(currentTutorial =='Y')?\"published\":\"Pending\"}}\n        </div>\n    </form>\n    <!-- form 끝  -->\n        <!-- 클릭시 published =='Y'  -->\n        <button class=\"badge badge-primary mr-2\" \n                v-if='currentTutorial.published==\"Y\"'\n                @click=\"updatePublished(false)\"\n                >\n         Unpublished\n         </button>\n        <button v-else class=\"badge badge-primary mr-2\" \n                @click=\"updatePublished(true)\">\n         published\n         </button>\n         <!-- delete 버튼 -->\n         <button class=\"badge badge-primary mr-2\" @click=\"deleteTutorial\">\n         Delete\n         </button>\n         <!-- update 버튼 -->\n        <button type=\"submit\" class=\"badge badge-success\" @click=\"updateTutorial\">\n         Update\n         </button>\n         <p>{{message}}</p>\n\n\n  </div>\n  <!-- currentTutorial == null 이면 -->\n  <div v-else>\n      <br>\n      <p>Please click on a Tutorial...</p>\n  </div>\n</template>\n\n<script>\nimport TutorialDataService from \"../../services/TutorialDataService\";\n//eslint : vue 감시 \n //  eslint-disable : eslint 비활성화 (name 두단어여야하는데 한단어라서 에러남)\n//  아래 eslint 적용 예외 처리 \n/* eslint-disable*/\nexport default {\n    name: \"tutorial\",\n    data(){\n        return{\n            currentTutorial: null,\n            message: ''\n        }\n    },\n    methods:{\n        // id로tutorial데이터 상세 조회\n        // 백엔드쪽에 요청 \n        getTutorial(id){\n            // id로 검색을 백엔드에 요청하는 메소드\n            TutorialDataService.get(id)\n            // 성공하면 then으로 들어옴\n            .then(response =>{\n                // response.data : 백엔드쪽에서온 데이터 \n                this.currentTutorial = response.data;\n                console.log(response.data);\n            })\n            // 실패하면 catch로 들어옴\n            .catch(e=>{\n                console.log(e)\n            })\n        },\n        // tutorial 데이터 수정 메소드 호출\n        updateTutorial(){\n            // 백엔드쪽에 id로 검색해서 데이터 수정 요청 \n            TutorialDataService.update(this.currentTutorial.id, this.currentTutorial)\n            // 성공하면 then으로 들어옴\n            .then(response=>{\n                console.log(response.data)\n                this.message = 'The tutorial was updated successfully!'\n            })\n            // 실패하면 catch로 들어옴 \n            .catch(e=>{\n                console.log(e)\n            })\n        },\n        // 백엔드쪽에 데이터 삭제 요청 메소드\n        deleteTutorial(){\n            // 백엔드쪽에 id로 데이터 삭제 요청\n            TutorialDataService.delete(this.currentTutorial.id)\n            // 성공하면 then 으로 응답 들어옴 \n            .then(response=>{\n                console.log(response.data)\n            })\n            // 실패하면 catch 로 응답 들어옴 \n            .catch(e=>{\n                console.log(e)\n                // 실패 후 새로고침(tutorialList 첫화면으로 새로고침 )\n                // this.$router.push(이동할 페이지)\n                this.$router.push({name: \"tutorials\"})\n            })\n        },\n        // tutorial테이블 published 컬럼 : 'Y'<->'N'\n        // published컬럼을 수정하는 메소드 \n        updatePublished(status){\n//TODO\n        }\n    },\n    // vue 화면이 로딩될때(뜰때) 자동으로 실행되는 이벤트\n    mounted(){\n        this.message = '';\n        // router/index.js =>path: 'tutorials/:id'\n        this.getTutorial(this.$route.params.id);\n    }\n}\n</script>\n\n<style>\n    .edit-form{\n        max-width: 300px;\n        margin: auto;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}