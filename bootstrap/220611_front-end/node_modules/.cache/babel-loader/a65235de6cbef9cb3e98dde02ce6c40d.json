{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 화면 설명: 회원정보 수정/삭제 화면\nimport CustomerDataService from \"@/services/CustomerDataService\";\nexport default {\n  name: \"edit-customer\",\n  data: function data() {\n    return {\n      //객체 (회원정보)\n      currentCustomer: null,\n      message: ''\n    };\n  },\n  methods: {\n    getCustomer: function getCustomer(id) {\n      var _this = this;\n\n      //  id에 해당하는 회원정보를 조회하는 서비스를 요청(springboot)\n      //  axios 통신이용 서비스 호출(springboot)\n      CustomerDataService.get(id) //성공 -> 결과데이터 들어옴\n      .then(function (response) {\n        _this.currentCustomer = response.data;\n      }) //  실패 -> 에러데이터 들어옴\n      [\"catch\"](function (e) {\n        alert(e);\n      });\n    },\n    // 회원정보 수정 서비스 요청(springboot)\n    updateCustomer: function updateCustomer() {\n      var _this2 = this;\n\n      CustomerDataService.update(this.currentCustomer.id, this.currentCustomer).then(function () {\n        _this2.message = 'The customer was update successfully!';\n      })[\"catch\"](function (e) {\n        alert(e);\n      });\n    },\n    //  회원 삭제 서비스 요청\n    deleteCustomer: function deleteCustomer() {\n      var _this3 = this;\n\n      CustomerDataService[\"delete\"](this.currentCustomer.id).then(function () {\n        //화면이동  (이동할 페이지 연결) : customers 화면으로 이동됨\n        //  router/index.js 안에 name\n        _this3.$router.push({\n          name: 'customers'\n        });\n      })[\"catch\"](function (e) {\n        alert(e);\n      });\n    }\n  },\n  //  화면이 뜨면 실행되는 이벤트\n  mounted: function mounted() {\n    //http://localhost:8080/:id(param정보)\n    //$route : route/index.js param.id\n    this.getCustomer(this.$route.params.id);\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA;AACA;AACA;EACAA,qBADA;EAEAC,IAFA,kBAEA;IACA;MACA;MACAC,qBAFA;MAGAC;IAHA;EAKA,CARA;EASAC;IACAC,WADA,uBACAC,EADA,EACA;MAAA;;MACA;MACA;MACAC,4BACA;MADA,CAEAC,IAFA,CAEA;QACA;MACA,CAJA,EAKA;MALA,UAMA;QACAC;MACA,CARA;IASA,CAbA;IAcA;IACAC,cAfA,4BAeA;MAAA;;MACAH,0EACAC,IADA,CACA;QACA;MACA,CAHA,WAIA;QACAC;MACA,CANA;IAOA,CAvBA;IAwBA;IACAE,cAzBA,4BAyBA;MAAA;;MACAJ,uDACAC,IADA,CACA;QACA;QACA;QACA;UAAAR;QAAA;MACA,CALA,WAMA;QACAS;MACA,CARA;IASA;EAnCA,CATA;EA+CA;EACAG,OAhDA,qBAgDA;IACA;IACA;IACA;EACA;AApDA","names":["name","data","currentCustomer","message","methods","getCustomer","id","CustomerDataService","then","alert","updateCustomer","deleteCustomer","mounted"],"sourceRoot":"src/components/customermanager","sources":["EditCustomer.vue"],"sourcesContent":["<template>\n    <!--    기존회원이 있을 경우  currentCustomer != null -->\n    <div v-if=\"currentCustomer\">\n      <div class=\"mb-3\">\n        <label for=\"firstName\" class=\"form-label\">First Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"firstName\" required name=\"firstName\" v-model=\"currentCustomer.firstName\">\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"lastName\" class=\"form-label\">Last Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"lastName\" required name=\"lastName\" v-model=\"currentCustomer.lastName\">\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"email\" class=\"form-label\">Email</label>\n        <input type=\"email\" class=\"form-control\" id=\"email\" required name=\"email\" v-model=\"currentCustomer.email\">\n      </div>\n      <div class=\"mb-3\">\n        <label for=\"phone\" class=\"form-label\">Phone</label>\n        <input type=\"text\" class=\"form-control\" id=\"phone\" required name=\"phone\" v-model=\"currentCustomer.phone\">\n      </div>\n      <div class=\"mb-3\">\n        <button @click=\"updateCustomer\" class=\"btn btn-primary me-3\">Update</button>\n        <button @click=\"deleteCustomer\" class=\"btn btn-danger\">Delete</button>\n      </div>\n<!--      수정 버튼을 클릭후 성공시 아래가 보임 -->\n      <div class=\"alert alert-success\" role=\"alert\" v-if=\"message\">\n        {{message}}\n      </div>\n    </div>\n</template>\n\n<script>\n// 화면 설명: 회원정보 수정/삭제 화면\nimport CustomerDataService  from \"@/services/CustomerDataService\";\nexport default {\n  name: \"edit-customer\",\n  data(){\n    return {\n      //객체 (회원정보)\n      currentCustomer: null,\n      message:''\n    }\n  },\n  methods:{\n    getCustomer(id){\n    //  id에 해당하는 회원정보를 조회하는 서비스를 요청(springboot)\n    //  axios 통신이용 서비스 호출(springboot)\n      CustomerDataService.get(id)\n          //성공 -> 결과데이터 들어옴\n          .then(response=>{\n            this.currentCustomer=response.data;\n          })\n    //  실패 -> 에러데이터 들어옴\n        .catch(e=>{\n          alert(e)\n        })\n    },\n    // 회원정보 수정 서비스 요청(springboot)\n    updateCustomer(){\n      CustomerDataService.update(this.currentCustomer.id, this.currentCustomer)\n          .then(()=>{\n            this.message = 'The customer was update successfully!'\n          })\n          .catch(e=>{\n            alert(e)\n          })\n    },\n  //  회원 삭제 서비스 요청\n    deleteCustomer(){\n      CustomerDataService.delete(this.currentCustomer.id)\n          .then(()=>{\n            //화면이동  (이동할 페이지 연결) : customers 화면으로 이동됨\n            //  router/index.js 안에 name\n            this.$router.push({name:'customers'})\n          })\n          .catch(e=>{\n            alert(e)\n          })\n    },\n\n  },\n//  화면이 뜨면 실행되는 이벤트\n  mounted() {\n    //http://localhost:8080/:id(param정보)\n    //$route : route/index.js param.id\n    this.getCustomer(this.$route.params.id)\n  }\n}\n</script>"]},"metadata":{},"sourceType":"module"}